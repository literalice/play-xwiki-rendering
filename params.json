{"google":"","name":"Play-xwiki-rendering","tagline":"Play2 module allows you to convert texts written in a certain wiki syntax to some formatted texts using XWiki Rendering Framework.","body":"# Play2 XWiki Rendering Module #\r\n\r\n## Introduction ##\r\n\r\nThis Play2 module allows you to convert texts written in a certain wiki syntax to some formatted texts using XWiki Rendering Framework.\r\n\r\n### Example ###\r\n\r\n```scala\r\nval result = DefaultXWikiRenderer.render(\"** Bold ** {{code type=\"java\"}}class Macro{}{{/code}}\")\r\n// <p><b>Bold</b><pre class=\"java\">class Macro{}</pre></p>\r\n```\r\n\r\nSee also [XWiki Rendering Framework](http://rendering.xwiki.org/xwiki/bin/view/Main/WebHome) for the details about the framework.\r\n\r\n## Installing the module ##\r\n\r\nTo use the module, a repository and dependency should be added to your \"project/Build.scala\"\r\n\r\n<dl>\r\n    <dt>Repository</dt>\r\n    <dd>http://repository-monochromeroad.forge.cloudbees.com/release</dd>\r\n    <dt>Dependency</dt>\r\n    <dd>\"com.monochromeroad\" %% \"play-xwiki-rendering\" % \"1.0\"</dd>\r\n</dl>\r\n\r\n```scala\r\nobject ApplicationBuild extends Build {\r\n\r\n  val appName         = \"Sample application integrated with XWiki Rendering\"\r\n  val appVersion      = \"1.0\"\r\n\r\n  val appDependencies = Seq(\r\n    \"com.monochromeroad\" %% \"play-xwiki-rendering\" % \"1.0\"\r\n  )\r\n\r\n  val main = PlayProject(appName, appVersion, appDependencies, mainLang = SCALA).settings(\r\n    resolvers += \"Monochrmeroad CloudBees Repository\" at \"http://repository-monochromeroad.forge.cloudbees.com/release\"\r\n  )\r\n}\r\n```\r\n\r\n## Default XWiki Renderer ##\r\n\r\nThis moudle provides some XWiki rendereres as a Play plugin.\r\n\r\n<dl>\r\n    <dt>com.monochromeroad.play.xwiki.rendering.plugin.DefaultXWikiRenderer</dt>\r\n    <dd>XDOM based renderer</dd>\r\n    <dt>com.monochromeroad.play.xwiki.rendering.plugin.DefaultXWikiStreamRenderer</dt>\r\n    <dd>Streaming based renderer</dd>\r\n    <dt>com.monochromeroad.play.xwiki.rendering.plugin.DefaultXWikiStringStreamRenderer</dt>\r\n    <dd>Simplified streaming based renderer</dd>\r\n</dl>\r\n\r\n### Installing the default renderers ###\r\n\r\nJust add a entry to the \"plugins.sbt\" in the conf directory.\r\n\r\n    10000:com.monochromeroad.play.xwiki.rendering.plugin.DefaultXWikiRenderingPlugin\r\n\r\n### DefaultXWikiRenderer ###\r\n\r\n```scala\r\nimport com.monochromeroad.play.xwiki.rendering.plugin.{DefaultXWikiRenderer => XCM}\r\nobject Application extends Controller {\r\n\r\n  def index = Action {\r\n    val htmlText = XCM.render(\"**TEST** //italic//\")\r\n\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\n### DefaultXWikiStreamRenderer ###\r\n\r\n```scala\r\nimport java.io.StringReader\r\nimport com.monochromeroad.play.xwiki.rendering.plugin.{DefaultXWikiStreamRenderer => XCM}\r\nobject Application extends Controller {\r\n\r\n  def index = Action {\r\n    val sourceReader = new StringReader(\"**TEST** //italic//\")\r\n    val htmlText = XCM.render(sourceReader, \"-- iv --\", (acc: String, n: String) => acc + n)\r\n\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\n### DefaultXWikiStringStreamRenderer ###\r\n\r\n```scala\r\nimport java.io.StringReader\r\nimport com.monochromeroad.play.xwiki.rendering.plugin.{DefaultXWikiStringStreamRenderer => XCM}\r\nobject Application extends Controller {\r\n\r\n  def index = Action {\r\n    val sourceReader = new StringReader(\"**TEST** //italic//\")\r\n    val result = new StringBuilder()\r\n    XCM.render(sourceReader, result.append(_))\r\n\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\n### Macros ###\r\n\r\nYou can use some XWiki macros.\r\n\r\nTo use a XWiki macro, add a macro jar to your project or register a macro source code.\r\n\r\n#### Adding a macro jar ####\r\n\r\nFirst, add the macro jar you want to use in the project.\r\n\r\n```scala\r\nval appDependencies = Seq(\r\n  \"org.xwiki.rendering\" % \"xwiki-rendering-macro-comment\" % \"4.1.3\"\r\n)\r\n```\r\n\r\nand\r\n\r\n```scala\r\nimport com.monochromeroad.play.xwiki.rendering.plugin.{DefaultXWikiRenderer => XCM}\r\nobject Application extends Controller {\r\n\r\n  def index = Action {\r\n    val htmlText = XCM.render(\"**TEST** {{comment}}This is a comment that would not be contained in the result{{/comment}}\")\r\n    // <p><b>TEST</b> </p>\r\n\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\nSee also about [XWiki official macros](http://rendering.xwiki.org/xwiki/bin/view/Main/Macros).\r\n\r\n#### Registering a macro code ####\r\n\r\nIf you want to create you own macro, the XWiki's site would be useful.\r\n\r\n[Writing a Macro](http://rendering.xwiki.org/xwiki/bin/view/Main/ExtendingMacro)\r\n\r\nFirst, write a macro class that extends DefaultXWikiMacro or DefaultNoParameterMacro, and has no parameter constructor.\r\n\r\nand regster the macro class in the \"conf/application.conf\"\r\n\r\n    xwiki.rendering.default.macros.1=utils.xwiki.macros.CodeMacro\r\n\r\n## License ##\r\n\r\nLGPL Version 2.1\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}